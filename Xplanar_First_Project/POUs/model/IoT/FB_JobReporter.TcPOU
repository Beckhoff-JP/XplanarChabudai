<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_JobReporter" Id="{6ddb0b70-fc20-473e-9f2a-690319fd5c5a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_JobReporter IMPLEMENTS InterfaceJobEventReporter
VAR_INPUT
END_VAR
VAR_OUTPUT
	event : JobEventReport;
	executing : JobEventReport;
	scope_task_triggers: ARRAY [0..10] OF BOOL;
	log_view: ARRAY [0..3, 0..19] OF T_MaxString;
END_VAR
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="_record_scope" Id="{da5a3ea4-84d4-4601-b7d3-3a0ce75af056}">
      <Declaration><![CDATA[METHOD _record_scope : BOOL
VAR_INPUT
	event : JobEventReport;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF event.task_name = 'Tilt forwards' THEN
		IF event.new_state = 'process' THEN
			scope_task_triggers[0] := TRUE;
		ELSIF event.new_state = 'quit' THEN
			scope_task_triggers[0] := FALSE;
		END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="_record_sqldb" Id="{42f60782-a7a6-47a0-ab99-3c440f4711af}">
      <Declaration><![CDATA[METHOD _record_sqldb : BOOL
VAR_INPUT
	event : JobEventReport;
END_VAR

]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="report" Id="{d2542430-59b7-4888-a551-078a3a508271}">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD report : BOOL
VAR_INPUT
	old_state	: bajp_jobmgmt.E_FutureExecutionState;
	new_state	: bajp_jobmgmt.E_FutureExecutionState;
	record_time	: bajp_jobmgmt.T_FILETIME64;
	executor	: REFERENCE TO bajp_jobmgmt.FB_Executor;
END_VAR
VAR_INST
	fb_timezone_info : FB_GetTimeZoneInformation := (bExecute := TRUE);
END_VAR
VAR
	text : T_MaxString;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[event.old_state := TO_STRING(old_state);
event.new_state := TO_STRING(new_state);
event.record_time := FILETIME64_TO_ISO8601(fileTime := record_time, nBias := DINT_TO_INT(fb_timezone_info.tzInfo.bias), bUTC := TRUE,nPrecision := 6);
event.job_id := executor.id;
event.task_name := executor.future.future_name;

// _record_scope(event);
_record_sqldb(event);

IF new_state = E_FutureExecutionState.process THEN
	executing := event;
END_IF

IF old_state = E_FutureExecutionState.process OR new_state = E_FutureExecutionState.process THEN

	// Report to ADS Log
	text := event.record_time;
	text := CONCAT(text, '	');
	text := CONCAT(text, event.new_state);
	text := CONCAT(text, '		');
	text := CONCAT(text, event.task_name);
	text := CONCAT(text, '		');
	text := CONCAT(text, event.job_id);
	ADSLOGSTR(msgCtrlMask := ADSLOG_MSGTYPE_LOG, msgFmtStr := text, strArg := '');	

	
	// Report to HMI
	MEMCPY(ADR(log_view[0,1]), ADR(log_view[0,0]), SIZEOF(log_view[0,0]) * 19);
	MEMCPY(ADR(log_view[1,1]), ADR(log_view[1,0]), SIZEOF(log_view[0,0]) * 19);
	MEMCPY(ADR(log_view[2,1]), ADR(log_view[2,0]), SIZEOF(log_view[0,0]) * 19);
	MEMCPY(ADR(log_view[3,1]), ADR(log_view[3,0]), SIZEOF(log_view[0,0]) * 19);
	log_view[0,0] := event.record_time;
	log_view[1,0] := event.task_name;
	IF old_state = E_FutureExecutionState.process THEN
		log_view[2,0] := 'END';
	ELSE
		log_view[2,0] := 'START';
	END_IF
	log_view[3,0] := event.job_id;
	
END_IF

report := TRUE;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_JobReporter">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_JobReporter._record_scope">
      <LineId Id="16" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="11" Count="1" />
      <LineId Id="14" Count="1" />
      <LineId Id="13" Count="0" />
      <LineId Id="10" Count="0" />
    </LineIds>
    <LineIds Name="FB_JobReporter._record_sqldb">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_JobReporter.report">
      <LineId Id="10" Count="1" />
      <LineId Id="15" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="47" Count="1" />
      <LineId Id="61" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="77" Count="1" />
      <LineId Id="49" Count="1" />
      <LineId Id="112" Count="1" />
      <LineId Id="53" Count="6" />
      <LineId Id="111" Count="0" />
      <LineId Id="110" Count="0" />
      <LineId Id="94" Count="1" />
      <LineId Id="60" Count="0" />
      <LineId Id="104" Count="2" />
      <LineId Id="93" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="98" Count="0" />
      <LineId Id="101" Count="1" />
      <LineId Id="99" Count="1" />
      <LineId Id="109" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="16" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>